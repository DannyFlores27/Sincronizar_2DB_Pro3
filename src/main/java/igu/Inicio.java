
package igu;

import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatMaterialLighterIJTheme;
import java.awt.Color;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import logica.Control;
import logica.Persona;

public class Inicio extends javax.swing.JFrame {

    private Control control;
    private String mySql="mySql", postgre="postgre";
    private Persona persona;
    
    public Inicio() {
        this.control = new Control ();

        FlatMaterialLighterIJTheme.setup();
        
        initComponents();
        initStyles();
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFondo = new javax.swing.JPanel();
        pnlTituloMenuDB = new javax.swing.JPanel();
        lblTituloApp = new javax.swing.JLabel();
        lblDbOn = new javax.swing.JLabel();
        pnlMenuAcciones = new javax.swing.JPanel();
        btnSincronizarDB = new javax.swing.JButton();
        btnPostgreDB = new javax.swing.JButton();
        btnMySqlDB = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        pnlInfo = new javax.swing.JPanel();
        scrDatos = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlFondo.setBackground(new java.awt.Color(255, 255, 255));

        pnlTituloMenuDB.setBackground(new java.awt.Color(0, 51, 102));

        lblTituloApp.setText("Proyecto 3");

        javax.swing.GroupLayout pnlTituloMenuDBLayout = new javax.swing.GroupLayout(pnlTituloMenuDB);
        pnlTituloMenuDB.setLayout(pnlTituloMenuDBLayout);
        pnlTituloMenuDBLayout.setHorizontalGroup(
            pnlTituloMenuDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloMenuDBLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblTituloApp, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDbOn, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156))
        );
        pnlTituloMenuDBLayout.setVerticalGroup(
            pnlTituloMenuDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloMenuDBLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(pnlTituloMenuDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTituloApp, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDbOn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pnlMenuAcciones.setBackground(new java.awt.Color(235, 235, 237));
        pnlMenuAcciones.setPreferredSize(new java.awt.Dimension(1020, 100));

        btnSincronizarDB.setText("Sincronizar DB");
        btnSincronizarDB.setBorder(null);
        btnSincronizarDB.setBorderPainted(false);
        btnSincronizarDB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSincronizarDB.setPreferredSize(new java.awt.Dimension(110, 35));

        btnPostgreDB.setText("Postgre DB");
        btnPostgreDB.setBorder(null);
        btnPostgreDB.setBorderPainted(false);
        btnPostgreDB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPostgreDB.setPreferredSize(new java.awt.Dimension(110, 35));

        btnMySqlDB.setText("MySQL DB");
        btnMySqlDB.setBorder(null);
        btnMySqlDB.setBorderPainted(false);
        btnMySqlDB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMySqlDB.setPreferredSize(new java.awt.Dimension(110, 35));
        btnMySqlDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMySqlDBActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.setBorderPainted(false);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.setPreferredSize(new java.awt.Dimension(110, 35));

        btnActualizar.setText("Actualizar");
        btnActualizar.setBorder(null);
        btnActualizar.setBorderPainted(false);
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.setPreferredSize(new java.awt.Dimension(110, 35));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnCrear.setForeground(new java.awt.Color(51, 51, 51));
        btnCrear.setText("Crear");
        btnCrear.setBorder(null);
        btnCrear.setBorderPainted(false);
        btnCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrear.setPreferredSize(new java.awt.Dimension(110, 35));

        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(null);
        btnGuardar.setBorderPainted(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setPreferredSize(new java.awt.Dimension(110, 35));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuAccionesLayout = new javax.swing.GroupLayout(pnlMenuAcciones);
        pnlMenuAcciones.setLayout(pnlMenuAccionesLayout);
        pnlMenuAccionesLayout.setHorizontalGroup(
            pnlMenuAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMenuAccionesLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(btnMySqlDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPostgreDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSincronizarDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        pnlMenuAccionesLayout.setVerticalGroup(
            pnlMenuAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuAccionesLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(pnlMenuAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPostgreDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSincronizarDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMySqlDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pnlInfo.setBackground(new java.awt.Color(255, 255, 255));

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        scrDatos.setViewportView(tblDatos);

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrDatos)
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrDatos)
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout pnlFondoLayout = new javax.swing.GroupLayout(pnlFondo);
        pnlFondo.setLayout(pnlFondoLayout);
        pnlFondoLayout.setHorizontalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTituloMenuDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlMenuAcciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlFondoLayout.setVerticalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFondoLayout.createSequentialGroup()
                .addComponent(pnlTituloMenuDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlMenuAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        //persona.setDpi(txtDpi.getText());
        String tipoDB = lblDbOn.getText();
        
        if(persona.getDpi().isEmpty() || persona.getNombre1().isEmpty()){
            javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campor \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            //nameTxt.requestFocus();
        }
        
        control.actualizarPersona(persona, tipoDB);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnMySqlDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMySqlDBActionPerformed
        cargarTabla(mySql);
    }//GEN-LAST:event_btnMySqlDBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnMySqlDB;
    private javax.swing.JButton btnPostgreDB;
    private javax.swing.JButton btnSincronizarDB;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblDbOn;
    private javax.swing.JLabel lblTituloApp;
    private javax.swing.JPanel pnlFondo;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlMenuAcciones;
    private javax.swing.JPanel pnlTituloMenuDB;
    private javax.swing.JScrollPane scrDatos;
    private javax.swing.JTable tblDatos;
    // End of variables declaration//GEN-END:variables

    private void initStyles() {
        lblTituloApp.putClientProperty( "FlatLaf.styleClass", "h0" );
        lblDbOn.putClientProperty( "FlatLaf.styleClass", "h1" );
        lblTituloApp.setForeground(Color.white);
        lblDbOn.setForeground(Color.white);
        btnActualizar.setForeground(Color.black);
        btnCrear.setForeground(Color.black);
        btnEliminar.setForeground(Color.black);
        btnMySqlDB.setForeground(Color.black);
        btnPostgreDB.setForeground(Color.black);
        btnSincronizarDB.setForeground(Color.black);
    }
    
    private void cargarTabla(String tipoDB){
        // Obtener la lista de personas desde la capa de lógica de negocio
        List<Persona> personas = control.obtenerPersonas(tipoDB);
        llenarTabla(personas);
        // Mostrar los datos de las personas obtenidas
        for (Persona persona : personas) {
            
            
            System.out.println("DPI: " + persona.getDpi());
            System.out.println("Nombre Completo: " + persona.getNombre1() + " " + persona.getNombre2() + " " + persona.getApellido1() + " " + persona.getApellido2());
            System.out.println("Dirección: " + persona.getDireccionDomicilio());
            System.out.println("Teléfono Domicilio: " + persona.getTelefonoDomicilio());
            System.out.println("Teléfono Móvil: " + persona.getTelefonoMovil());
            System.out.println("Salario Base: " + persona.getSalarioBase());
            System.out.println("Bonificación: " + persona.getBonificacion());
            System.out.println("-----------------------------------");
        }
    }
    
    // Método que convierte la lista de personas en una matriz de objetos
    private Object[][] convertirListaPersonas(List<Persona> personas) {
        Object[][] datos = new Object[personas.size()][10]; // 10 columnas (correspondientes a los campos de Persona)
        for (int i = 0; i < personas.size(); i++) {
            Persona p = personas.get(i);
            datos[i][0] = p.getDpi();
            datos[i][1] = p.getNombre1();
            datos[i][2] = p.getNombre2();
            datos[i][3] = p.getApellido1();
            datos[i][4] = p.getApellido2();
            datos[i][5] = p.getDireccionDomicilio();
            datos[i][6] = p.getTelefonoDomicilio();
            datos[i][7] = p.getTelefonoMovil();
            datos[i][8] = p.getSalarioBase();
            datos[i][9] = p.getBonificacion();
        }
        return datos;
    }

    // Método para llenar la tabla con la lista de personas
    private void llenarTabla(List<Persona> personas) {
        // Convertir la lista en un arreglo bidimensional de objetos
        Object[][] datosPersonas = convertirListaPersonas(personas);

        // Nombres de las columnas
        String[] columnas = { "DPI", "Nombre1", "Nombre2", "Apellido1", "Apellido2", "Dirección", "Teléfono Domicilio", "Teléfono Móvil", "Salario Base", "Bonificación" };

        // Crear el modelo de la tabla y establecerlo en la JTable
        DefaultTableModel modeloTabla = new DefaultTableModel(datosPersonas, columnas);
        tblDatos.setModel(modeloTabla);
    }
    
}
